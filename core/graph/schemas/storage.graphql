# ===============================================
# STORAGE
# ===============================================

extend type Query {
  storageTargets(
    siteId: UUID!
    ): [StorageTarget] @auth(requires: ["manage:system"])
}

extend type Mutation {
  updateStorageTargets(
    siteId: UUID!
    targets: [StorageTargetInput]!
  ): DefaultResponse @auth(requires: ["manage:system"])

  setupStorageTarget(
    targetId: UUID!
    state: JSON!
  ): StorageTargetSetupResponse @auth(requires: ["manage:system"])

  destroyStorageTargetSetup(
    targetId: UUID!
  ): DefaultResponse @auth(requires: ["manage:system"])

  executeStorageAction(
    targetId: UUID!
    handler: String!
  ): DefaultResponse @auth(requires: ["manage:system"])
}

# -----------------------------------------------
# TYPES
# -----------------------------------------------

type StorageTarget {
  id: UUID
  isEnabled: Boolean
  module: String
  title: String
  description: String
  icon: String
  banner: String
  vendor: String
  website: String
  contentTypes: JSON
  assetDelivery: JSON
  versioning: JSON
  sync: JSON
  status: JSON
  setup: JSON
  config: JSON
  actions: JSON
}

type StorageTargetSetupResponse {
  status: ResponseStatus
  state: JSON
}

input StorageTargetInput {
  id: UUID!
  module: String!
  isEnabled: Boolean
  contentTypes: [String!]
  largeThreshold: String
  assetDeliveryFileStreaming: Boolean
  assetDeliveryDirectAccess: Boolean
  syncMode: StorageTargetSyncMode
  syncInterval: String
  useVersioning: Boolean
  config: JSON
}

enum StorageTargetSyncMode {
  PULL
  PUSH
  SYNC
}
